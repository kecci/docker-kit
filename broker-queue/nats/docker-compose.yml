services:
  nats1:
    image: nats:latest
    ports:
      - "4222:4222"
      - "8222:8222"      
    volumes:
      - ./jetstream-cluster/nats1:/data
    command:
      - "--name=nats1"
      - "--cluster_name=c1"
      - "--cluster=nats://nats1:6222"
      - "--routes=nats-route://nats1:6222,nats-route://nats2:6222,nats-route://nats3:6222"
      - "--http_port=8222"
      - "--js"
      - "--sd=/data"

  nats2:
    image: nats:latest
    ports:
      - "4223:4222"
      - "8223:8222"
    volumes:
      - ./jetstream-cluster/nats2:/data
    command:
      - "--name=nats2"
      - "--cluster_name=c1"
      - "--cluster=nats://nats2:6222"
      - "--routes=nats-route://nats1:6222,nats-route://nats2:6222,nats-route://nats3:6222"
      - "--http_port=8222"
      - "--js"
      - "--sd=/data"

  nats3:
    image: nats:latest
    ports:
      - "4224:4222"
      - "8224:8222"
    volumes:
      - ./jetstream-cluster/nats3:/data
    command:
      - "--name=nats3"
      - "--cluster_name=c1"
      - "--cluster=nats://nats3:6222"
      - "--routes=nats-route://nats1:6222,nats-route://nats2:6222,nats-route://nats3:6222"
      - "--http_port=8222"
      - "--js"
      - "--sd=/data"

  # NATS dashboard instance running on the same private network.
  dashboard:
    image: mdawar/nats-dashboard
    environment:
      # The NATS monitoring server will be proxied on /proxy/* on the frontend.
      # See: config/Caddyfile for the reverse proxy configuration.
      REVERSE_PROXY_UPSTREAM: 'nats1:8222'
    volumes:
      # Optional config file.
      - ./config.json:/srv/config.json
    ports:
      - target: 80
        published: 4040
        protocol: tcp

volumes:
  nats1: {}
  nats2: {}
  nats3: {}